<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="36" hostname="DESKTOP-CS1UR8R" failures="0" tests="30" name="Test" time="0.361" errors="0" timestamp="2024-08-22T22:05:51 IST">
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeClass browserSetup" time="-1.724344550689E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass browserSetup -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550714E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550732E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550739E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550745E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550751E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.72434455076E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterClass closebrowser" time="-1.724344550767E9">
    <skipped/>
  </testcase> <!-- @AfterClass closebrowser -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeClass browserSetup" time="-1.72434455077E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass browserSetup -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550772E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550785E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550787E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550794E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550796E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550803E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterClass closebrowser" time="-1.724344550804E9">
    <skipped/>
  </testcase> <!-- @AfterClass closebrowser -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeClass browserSetup" time="-1.724344550806E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass browserSetup -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550808E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.72434455082E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550823E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550832E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550834E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550844E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterClass closebrowser" time="-1.724344550845E9">
    <skipped/>
  </testcase> <!-- @AfterClass closebrowser -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeClass browserSetup" time="-1.724344550847E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass browserSetup -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550849E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550853E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550858E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550867E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550874E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550877E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterClass closebrowser" time="-1.724344550879E9">
    <skipped/>
  </testcase> <!-- @AfterClass closebrowser -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeClass browserSetup" time="-1.72434455088E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass browserSetup -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550882E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550889E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.72434455089E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550894E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550895E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550897E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterClass closebrowser" time="-1.724344550899E9">
    <skipped/>
  </testcase> <!-- @AfterClass closebrowser -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeClass browserSetup" time="-1.7243445509E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass browserSetup -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550902E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550905E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550908E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550913E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550915E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.72434455092E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterClass closebrowser" time="-1.724344550921E9">
    <skipped/>
  </testcase> <!-- @AfterClass closebrowser -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeClass browserSetup" time="-1.724344550925E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass browserSetup -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550926E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.72434455093E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550932E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550944E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550948E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.72434455095E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterClass closebrowser" time="-1.72434455095E9">
    <skipped/>
  </testcase> <!-- @AfterClass closebrowser -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeClass browserSetup" time="-1.724344550952E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass browserSetup -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550953E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550955E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550957E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550961E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550963E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.72434455097E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterClass closebrowser" time="-1.724344550976E9">
    <skipped/>
  </testcase> <!-- @AfterClass closebrowser -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeClass browserSetup" time="-1.724344550985E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass browserSetup -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550987E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344550988E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344550989E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344551E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344551002E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344551007E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterClass closebrowser" time="-1.72434455101E9">
    <skipped/>
  </testcase> <!-- @AfterClass closebrowser -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeClass browserSetup" time="-1.724344551012E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeClass on method browserSetup but has not been marked @Optional or defined
in C:\Users\USER\git\LearningSelenium\LearningSelenium\LearningSelenium\com.Amazon\testng.xml
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 22 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass browserSetup -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344551014E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344551017E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344551018E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344551021E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeMethod login" time="-1.724344551022E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterMethod logout" time="-1.724344551025E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterClass closebrowser" time="-1.724344551025E9">
    <skipped/>
  </testcase> <!-- @AfterClass closebrowser -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct7Test" name="addProduct" time="0.0">
    <skipped/>
  </testcase> <!-- addProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct7Test" name="deleteProduct" time="0.0">
    <skipped/>
  </testcase> <!-- deleteProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct7Test" name="updateProduct" time="0.0">
    <skipped/>
  </testcase> <!-- updateProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct1Test" name="addProduct" time="0.0">
    <skipped/>
  </testcase> <!-- addProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct1Test" name="updateProduct" time="0.0">
    <skipped/>
  </testcase> <!-- updateProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct1Test" name="deleteProduct" time="0.0">
    <skipped/>
  </testcase> <!-- deleteProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct2Test" name="addProduct" time="0.0">
    <skipped/>
  </testcase> <!-- addProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct2Test" name="deleteProduct" time="0.0">
    <skipped/>
  </testcase> <!-- deleteProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct2Test" name="updateProduct" time="0.0">
    <skipped/>
  </testcase> <!-- updateProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct10Test" name="addProduct" time="0.0">
    <skipped/>
  </testcase> <!-- addProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct10Test" name="deleteProduct" time="0.0">
    <skipped/>
  </testcase> <!-- deleteProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct10Test" name="updateProduct" time="0.0">
    <skipped/>
  </testcase> <!-- updateProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct4Test" name="addProduct" time="0.0">
    <skipped/>
  </testcase> <!-- addProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct4Test" name="deleteProduct" time="0.0">
    <skipped/>
  </testcase> <!-- deleteProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct4Test" name="updateProduct" time="0.0">
    <skipped/>
  </testcase> <!-- updateProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct3Test" name="addProduct" time="0.0">
    <skipped/>
  </testcase> <!-- addProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct3Test" name="deleteProduct" time="0.0">
    <skipped/>
  </testcase> <!-- deleteProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct3Test" name="updateProduct" time="0.0">
    <skipped/>
  </testcase> <!-- updateProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct5Test" name="addProduct" time="0.0">
    <skipped/>
  </testcase> <!-- addProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct5Test" name="deleteProduct" time="0.0">
    <skipped/>
  </testcase> <!-- deleteProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct5Test" name="updateProduct" time="0.0">
    <skipped/>
  </testcase> <!-- updateProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct6Test" name="addProduct" time="0.0">
    <skipped/>
  </testcase> <!-- addProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct6Test" name="deleteProduct" time="0.0">
    <skipped/>
  </testcase> <!-- deleteProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct6Test" name="updateProduct" time="0.0">
    <skipped/>
  </testcase> <!-- updateProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct9Test" name="addProduct" time="0.0">
    <skipped/>
  </testcase> <!-- addProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct9Test" name="deleteProduct" time="0.0">
    <skipped/>
  </testcase> <!-- deleteProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct9Test" name="updateProduct" time="0.0">
    <skipped/>
  </testcase> <!-- updateProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct8Test" name="addProduct" time="0.0">
    <skipped/>
  </testcase> <!-- addProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct8Test" name="deleteProduct" time="0.0">
    <skipped/>
  </testcase> <!-- deleteProduct -->
  <testcase classname="com.Amazonkart.kidsproducttest.KidsProduct8Test" name="updateProduct" time="0.0">
    <skipped/>
  </testcase> <!-- updateProduct -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterSuite terminateSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite terminateSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterSuite terminateSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite terminateSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterSuite terminateSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite terminateSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterSuite terminateSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite terminateSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterSuite terminateSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite terminateSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterSuite terminateSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite terminateSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterSuite terminateSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite terminateSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterSuite terminateSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite terminateSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterSuite terminateSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite terminateSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeSuite getSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite getSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeSuite getSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite getSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeSuite getSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite getSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeSuite getSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite getSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeSuite getSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite getSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeSuite getSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite getSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeSuite getSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite getSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeSuite getSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite getSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeSuite getSuiteconnection" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite getSuiteconnection -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterTest postcondition" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest postcondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterTest postcondition" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest postcondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterTest postcondition" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest postcondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterTest postcondition" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest postcondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterTest postcondition" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest postcondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterTest postcondition" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest postcondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterTest postcondition" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest postcondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterTest postcondition" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest postcondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@AfterTest postcondition" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest postcondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeTest precondition" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest precondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeTest precondition" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest precondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeTest precondition" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest precondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeTest precondition" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest precondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeTest precondition" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest precondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeTest precondition" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest precondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeTest precondition" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest precondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeTest precondition" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest precondition -->
  <testcase classname="com.amazon.generic.common.BaseClass" name="@BeforeTest precondition" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest precondition -->
</testsuite> <!-- Test -->
